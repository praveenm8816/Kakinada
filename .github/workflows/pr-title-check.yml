name: "Enforce PR Title Format"

on:
  pull_request:
    types: [opened, edited, reopened, synchronize]
  workflow_call:

permissions:
  pull-requests: read
  contents: read

jobs:
  PR-Title-Check:
    runs-on: ubuntu-latest
    steps:
      - name: Check if only CODEOWNERS file was changed
        id: codeowners
        uses: actions/github-script@v3
        with:
          script: |
            const pr = context.payload.pull_request;
            if (!pr) return core.setFailed("Not a PR event.");
            const files = await github.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number
            });
            const codeownersPaths = ['CODEOWNERS', '.github/CODEOWNERS'];
            const fileNames = files.data.map(file => file.filename);
            const onlyCodeowners = fileNames.length > 0 && fileNames.every(name => codeownersPaths.includes(name));
            core.setOutput("only_codeowners", onlyCodeowners);

      - name: Check if PR author is a bot (ci-builder/renovate)
        id: autobot
        uses: actions/github-script@v3
        with:
          script: |
            const pr = context.payload.pull_request;
            if (!pr) return core.setFailed("Not a PR event.");
            const botAuthors = ['ci-builder', 'renovate[bot]', 'renovate'];
            core.setOutput("is_bot", botAuthors.includes(pr.user.login));

      - name: Skip check for CODEOWNERS-only PRs
        if: steps.codeowners.outputs.only_codeowners == 'true'
        run: echo "Skipping PR Title check as only CODEOWNERS file was changed."

      - name: Skip for bot PRs
        if: steps.autobot.outputs.is_bot == 'true'
        run: echo "Skipping title check, PR opened by bot user (ci-builder or renovate)."

      - name: Enforce PR Title Format
        if: steps.codeowners.outputs.only_codeowners != 'true' && steps.autobot.outputs.is_bot != 'true'
        uses: actions/github-script@v3
        with:
          script: |
            const pr = context.payload.pull_request;
            if (!pr) return core.setFailed("Not a PR event.");
            const pattern = /^CCL-\d{5}\s.+/;
            if (!pattern.test(pr.title)) {
              core.setFailed("PR title must start with CCL-<5digit> <description> (eg. 'CCL-12345 Add feature').");
            }
