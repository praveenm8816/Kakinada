name: "Enforce PR Title Format"

on:
  workflow_call:
  pull_request:
    branches:
      - 'develop'
      - 'release/*'

permissions:
  pull-requests: read
  contents: read

jobs:
  PR-Title-Check:
    runs-on: ubuntu-latest

    steps:
      - name: Check PR author and CODEOWNERS file
        id: prmeta
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const pr = context.payload.pull_request;
            if (!pr) return core.setFailed("Not a PR event.");
            const botAuthors = ['ci-builder', 'renovate[bot]', 'renovate', 'bot'];
            const isBot = botAuthors.some(bot => pr.user.login.toLowerCase().includes(bot));
            const files = await github.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number
            });
            const codeownersPaths = ['CODEOWNERS', '.github/CODEOWNERS'];
            const fileNames = files.data.map(file => file.filename.trim());
            const hasCodeowners = fileNames.some(name => codeownersPaths.includes(name));
            core.setOutput("is_bot", isBot ? 'true' : 'false');
            core.setOutput("has_codeowners", hasCodeowners ? 'true' : 'false');
            console.log('Debug: is_bot:', isBot);
            console.log('Debug: has_codeowners:', hasCodeowners);

      - name: Skip for bot PRs
        if: ${{ steps.prmeta.outputs.is_bot == 'true' }}
        run: echo "Skipping title check, PR opened by bot user (ci-builder, renovate, or bot)."

      - name: Skip if CODEOWNERS file changed
        if: ${{ steps.prmeta.outputs.has_codeowners == 'true' }}
        run: echo "Skipping PR Title check as CODEOWNERS file was changed."

      - name: Enforce PR Title Format
        if: ${{ steps.prmeta.outputs.is_bot != 'true' && steps.prmeta.outputs.has_codeowners != 'true' }}
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const pr = context.payload.pull_request;
            if (!pr) return core.setFailed("Not a PR event.");
            const pattern = /^CCL-\d{5}\s.+/;
            if (!pattern.test(pr.title)) {
              core.setFailed("PR title must start with CCL-<5digit> <description> (eg. 'CCL-12345 Add feature').");
            }
